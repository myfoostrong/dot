{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "ref": "Config",
  "type": "object",
  "properties": {
    "$schema": {
      "description": "JSON schema reference for configuration validation",
      "type": "string"
    },
    "theme": {
      "description": "Theme name to use for the interface",
      "type": "string"
    },
    "keybinds": {
      "description": "Custom keybind configurations",
      "ref": "KeybindsConfig",
      "type": "object",
      "properties": {
        "leader": {
          "description": "Leader key for keybind combinations\n\ndefault: `ctrl+x`",
          "default": "ctrl+x",
          "type": "string",
          "examples": [
            "ctrl+x"
          ]
        },
        "app_help": {
          "description": "Show help dialog\n\ndefault: `<leader>h`",
          "default": "<leader>h",
          "type": "string",
          "examples": [
            "<leader>h"
          ]
        },
        "app_exit": {
          "description": "Exit the application\n\ndefault: `ctrl+c,<leader>q`",
          "default": "ctrl+c,<leader>q",
          "type": "string",
          "examples": [
            "ctrl+c,<leader>q"
          ]
        },
        "editor_open": {
          "description": "Open external editor\n\ndefault: `<leader>e`",
          "default": "<leader>e",
          "type": "string",
          "examples": [
            "<leader>e"
          ]
        },
        "theme_list": {
          "description": "List available themes\n\ndefault: `<leader>t`",
          "default": "<leader>t",
          "type": "string",
          "examples": [
            "<leader>t"
          ]
        },
        "project_init": {
          "description": "Create/update AGENTS.md\n\ndefault: `<leader>i`",
          "default": "<leader>i",
          "type": "string",
          "examples": [
            "<leader>i"
          ]
        },
        "tool_details": {
          "description": "Toggle tool details\n\ndefault: `<leader>d`",
          "default": "<leader>d",
          "type": "string",
          "examples": [
            "<leader>d"
          ]
        },
        "thinking_blocks": {
          "description": "Toggle thinking blocks\n\ndefault: `<leader>b`",
          "default": "<leader>b",
          "type": "string",
          "examples": [
            "<leader>b"
          ]
        },
        "session_export": {
          "description": "Export session to editor\n\ndefault: `<leader>x`",
          "default": "<leader>x",
          "type": "string",
          "examples": [
            "<leader>x"
          ]
        },
        "session_new": {
          "description": "Create a new session\n\ndefault: `<leader>n`",
          "default": "<leader>n",
          "type": "string",
          "examples": [
            "<leader>n"
          ]
        },
        "session_list": {
          "description": "List all sessions\n\ndefault: `<leader>l`",
          "default": "<leader>l",
          "type": "string",
          "examples": [
            "<leader>l"
          ]
        },
        "session_timeline": {
          "description": "Show session timeline\n\ndefault: `<leader>g`",
          "default": "<leader>g",
          "type": "string",
          "examples": [
            "<leader>g"
          ]
        },
        "session_share": {
          "description": "Share current session\n\ndefault: `<leader>s`",
          "default": "<leader>s",
          "type": "string",
          "examples": [
            "<leader>s"
          ]
        },
        "session_unshare": {
          "description": "Unshare current session\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "session_interrupt": {
          "description": "Interrupt current session\n\ndefault: `esc`",
          "default": "esc",
          "type": "string",
          "examples": [
            "esc"
          ]
        },
        "session_compact": {
          "description": "Compact the session\n\ndefault: `<leader>c`",
          "default": "<leader>c",
          "type": "string",
          "examples": [
            "<leader>c"
          ]
        },
        "session_child_cycle": {
          "description": "Cycle to next child session\n\ndefault: `ctrl+right`",
          "default": "ctrl+right",
          "type": "string",
          "examples": [
            "ctrl+right"
          ]
        },
        "session_child_cycle_reverse": {
          "description": "Cycle to previous child session\n\ndefault: `ctrl+left`",
          "default": "ctrl+left",
          "type": "string",
          "examples": [
            "ctrl+left"
          ]
        },
        "messages_page_up": {
          "description": "Scroll messages up by one page\n\ndefault: `pgup`",
          "default": "pgup",
          "type": "string",
          "examples": [
            "pgup"
          ]
        },
        "messages_page_down": {
          "description": "Scroll messages down by one page\n\ndefault: `pgdown`",
          "default": "pgdown",
          "type": "string",
          "examples": [
            "pgdown"
          ]
        },
        "messages_half_page_up": {
          "description": "Scroll messages up by half page\n\ndefault: `ctrl+alt+u`",
          "default": "ctrl+alt+u",
          "type": "string",
          "examples": [
            "ctrl+alt+u"
          ]
        },
        "messages_half_page_down": {
          "description": "Scroll messages down by half page\n\ndefault: `ctrl+alt+d`",
          "default": "ctrl+alt+d",
          "type": "string",
          "examples": [
            "ctrl+alt+d"
          ]
        },
        "messages_first": {
          "description": "Navigate to first message\n\ndefault: `ctrl+g`",
          "default": "ctrl+g",
          "type": "string",
          "examples": [
            "ctrl+g"
          ]
        },
        "messages_last": {
          "description": "Navigate to last message\n\ndefault: `ctrl+alt+g`",
          "default": "ctrl+alt+g",
          "type": "string",
          "examples": [
            "ctrl+alt+g"
          ]
        },
        "messages_copy": {
          "description": "Copy message\n\ndefault: `<leader>y`",
          "default": "<leader>y",
          "type": "string",
          "examples": [
            "<leader>y"
          ]
        },
        "messages_undo": {
          "description": "Undo message\n\ndefault: `<leader>u`",
          "default": "<leader>u",
          "type": "string",
          "examples": [
            "<leader>u"
          ]
        },
        "messages_redo": {
          "description": "Redo message\n\ndefault: `<leader>r`",
          "default": "<leader>r",
          "type": "string",
          "examples": [
            "<leader>r"
          ]
        },
        "model_list": {
          "description": "List available models\n\ndefault: `<leader>m`",
          "default": "<leader>m",
          "type": "string",
          "examples": [
            "<leader>m"
          ]
        },
        "model_cycle_recent": {
          "description": "Next recent model\n\ndefault: `f2`",
          "default": "f2",
          "type": "string",
          "examples": [
            "f2"
          ]
        },
        "model_cycle_recent_reverse": {
          "description": "Previous recent model\n\ndefault: `shift+f2`",
          "default": "shift+f2",
          "type": "string",
          "examples": [
            "shift+f2"
          ]
        },
        "agent_list": {
          "description": "List agents\n\ndefault: `<leader>a`",
          "default": "<leader>a",
          "type": "string",
          "examples": [
            "<leader>a"
          ]
        },
        "agent_cycle": {
          "description": "Next agent\n\ndefault: `tab`",
          "default": "tab",
          "type": "string",
          "examples": [
            "tab"
          ]
        },
        "agent_cycle_reverse": {
          "description": "Previous agent\n\ndefault: `shift+tab`",
          "default": "shift+tab",
          "type": "string",
          "examples": [
            "shift+tab"
          ]
        },
        "input_clear": {
          "description": "Clear input field\n\ndefault: `ctrl+c`",
          "default": "ctrl+c",
          "type": "string",
          "examples": [
            "ctrl+c"
          ]
        },
        "input_paste": {
          "description": "Paste from clipboard\n\ndefault: `ctrl+v`",
          "default": "ctrl+v",
          "type": "string",
          "examples": [
            "ctrl+v"
          ]
        },
        "input_submit": {
          "description": "Submit input\n\ndefault: `enter`",
          "default": "enter",
          "type": "string",
          "examples": [
            "enter"
          ]
        },
        "input_newline": {
          "description": "Insert newline in input\n\ndefault: `shift+enter,ctrl+j`",
          "default": "shift+enter,ctrl+j",
          "type": "string",
          "examples": [
            "shift+enter,ctrl+j"
          ]
        },
        "switch_mode": {
          "description": "@deprecated use agent_cycle. Next mode\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "switch_mode_reverse": {
          "description": "@deprecated use agent_cycle_reverse. Previous mode\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "switch_agent": {
          "description": "@deprecated use agent_cycle. Next agent\n\ndefault: `tab`",
          "default": "tab",
          "type": "string",
          "examples": [
            "tab"
          ]
        },
        "switch_agent_reverse": {
          "description": "@deprecated use agent_cycle_reverse. Previous agent\n\ndefault: `shift+tab`",
          "default": "shift+tab",
          "type": "string",
          "examples": [
            "shift+tab"
          ]
        },
        "file_list": {
          "description": "@deprecated Currently not available. List files\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "file_close": {
          "description": "@deprecated Close file\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "file_search": {
          "description": "@deprecated Search file\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "file_diff_toggle": {
          "description": "@deprecated Split/unified diff\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "messages_previous": {
          "description": "@deprecated Navigate to previous message\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "messages_next": {
          "description": "@deprecated Navigate to next message\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "messages_layout_toggle": {
          "description": "@deprecated Toggle layout\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        },
        "messages_revert": {
          "description": "@deprecated use messages_undo. Revert message\n\ndefault: `none`",
          "default": "none",
          "type": "string",
          "examples": [
            "none"
          ]
        }
      },
      "additionalProperties": false
    },
    "tui": {
      "description": "TUI specific settings",
      "type": "object",
      "properties": {
        "scroll_speed": {
          "description": "TUI scroll speed",
          "default": 2,
          "type": "number",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "command": {
      "description": "Command configuration, see https://opencode.ai/docs/commands",
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "template": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "agent": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "subtask": {
            "type": "boolean"
          }
        },
        "required": [
          "template"
        ],
        "additionalProperties": false
      }
    },
    "watcher": {
      "type": "object",
      "properties": {
        "ignore": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "plugin": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "snapshot": {
      "type": "boolean"
    },
    "share": {
      "description": "Control sharing behavior:'manual' allows manual sharing via commands, 'auto' enables automatic sharing, 'disabled' disables all sharing",
      "type": "string",
      "enum": [
        "manual",
        "auto",
        "disabled"
      ]
    },
    "autoshare": {
      "description": "@deprecated Use 'share' field instead. Share newly created sessions automatically",
      "type": "boolean"
    },
    "autoupdate": {
      "description": "Automatically update to the latest version",
      "type": "boolean"
    },
    "disabled_providers": {
      "description": "Disable providers that are loaded automatically",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "model": {
      "description": "Model to use in the format of provider/model, eg anthropic/claude-2",
      "type": "string"
    },
    "small_model": {
      "description": "Small model to use for tasks like title generation in the format of provider/model",
      "type": "string"
    },
    "username": {
      "description": "Custom username to display in conversations instead of system username",
      "type": "string"
    },
    "mode": {
      "description": "@deprecated Use `agent` field instead.",
      "type": "object",
      "properties": {
        "build": {
          "ref": "AgentConfig",
          "type": "object",
          "properties": {
            "model": {
              "type": "string"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "prompt": {
              "type": "string"
            },
            "tools": {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "boolean"
              }
            },
            "disable": {
              "type": "boolean"
            },
            "description": {
              "description": "Description of when to use the agent",
              "type": "string"
            },
            "mode": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "subagent"
                },
                {
                  "type": "string",
                  "const": "primary"
                },
                {
                  "type": "string",
                  "const": "all"
                }
              ]
            },
            "permission": {
              "type": "object",
              "properties": {
                "edit": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                },
                "bash": {
                  "anyOf": [
                    {
                      "anyOf": [
                        {
                          "type": "string",
                          "const": "ask"
                        },
                        {
                          "type": "string",
                          "const": "allow"
                        },
                        {
                          "type": "string",
                          "const": "deny"
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string",
                            "const": "ask"
                          },
                          {
                            "type": "string",
                            "const": "allow"
                          },
                          {
                            "type": "string",
                            "const": "deny"
                          }
                        ]
                      }
                    }
                  ]
                },
                "webfetch": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": {}
        },
        "plan": {
          "ref": "AgentConfig",
          "type": "object",
          "properties": {
            "model": {
              "type": "string"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "prompt": {
              "type": "string"
            },
            "tools": {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "boolean"
              }
            },
            "disable": {
              "type": "boolean"
            },
            "description": {
              "description": "Description of when to use the agent",
              "type": "string"
            },
            "mode": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "subagent"
                },
                {
                  "type": "string",
                  "const": "primary"
                },
                {
                  "type": "string",
                  "const": "all"
                }
              ]
            },
            "permission": {
              "type": "object",
              "properties": {
                "edit": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                },
                "bash": {
                  "anyOf": [
                    {
                      "anyOf": [
                        {
                          "type": "string",
                          "const": "ask"
                        },
                        {
                          "type": "string",
                          "const": "allow"
                        },
                        {
                          "type": "string",
                          "const": "deny"
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string",
                            "const": "ask"
                          },
                          {
                            "type": "string",
                            "const": "allow"
                          },
                          {
                            "type": "string",
                            "const": "deny"
                          }
                        ]
                      }
                    }
                  ]
                },
                "webfetch": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": {}
        }
      },
      "additionalProperties": {
        "ref": "AgentConfig",
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "temperature": {
            "type": "number"
          },
          "top_p": {
            "type": "number"
          },
          "prompt": {
            "type": "string"
          },
          "tools": {
            "type": "object",
            "propertyNames": {
              "type": "string"
            },
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "disable": {
            "type": "boolean"
          },
          "description": {
            "description": "Description of when to use the agent",
            "type": "string"
          },
          "mode": {
            "anyOf": [
              {
                "type": "string",
                "const": "subagent"
              },
              {
                "type": "string",
                "const": "primary"
              },
              {
                "type": "string",
                "const": "all"
              }
            ]
          },
          "permission": {
            "type": "object",
            "properties": {
              "edit": {
                "anyOf": [
                  {
                    "type": "string",
                    "const": "ask"
                  },
                  {
                    "type": "string",
                    "const": "allow"
                  },
                  {
                    "type": "string",
                    "const": "deny"
                  }
                ]
              },
              "bash": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "type": "string",
                        "const": "ask"
                      },
                      {
                        "type": "string",
                        "const": "allow"
                      },
                      {
                        "type": "string",
                        "const": "deny"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string",
                          "const": "ask"
                        },
                        {
                          "type": "string",
                          "const": "allow"
                        },
                        {
                          "type": "string",
                          "const": "deny"
                        }
                      ]
                    }
                  }
                ]
              },
              "webfetch": {
                "anyOf": [
                  {
                    "type": "string",
                    "const": "ask"
                  },
                  {
                    "type": "string",
                    "const": "allow"
                  },
                  {
                    "type": "string",
                    "const": "deny"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": {}
      }
    },
    "agent": {
      "description": "Agent configuration, see https://opencode.ai/docs/agent",
      "type": "object",
      "properties": {
        "plan": {
          "ref": "AgentConfig",
          "type": "object",
          "properties": {
            "model": {
              "type": "string"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "prompt": {
              "type": "string"
            },
            "tools": {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "boolean"
              }
            },
            "disable": {
              "type": "boolean"
            },
            "description": {
              "description": "Description of when to use the agent",
              "type": "string"
            },
            "mode": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "subagent"
                },
                {
                  "type": "string",
                  "const": "primary"
                },
                {
                  "type": "string",
                  "const": "all"
                }
              ]
            },
            "permission": {
              "type": "object",
              "properties": {
                "edit": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                },
                "bash": {
                  "anyOf": [
                    {
                      "anyOf": [
                        {
                          "type": "string",
                          "const": "ask"
                        },
                        {
                          "type": "string",
                          "const": "allow"
                        },
                        {
                          "type": "string",
                          "const": "deny"
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string",
                            "const": "ask"
                          },
                          {
                            "type": "string",
                            "const": "allow"
                          },
                          {
                            "type": "string",
                            "const": "deny"
                          }
                        ]
                      }
                    }
                  ]
                },
                "webfetch": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": {}
        },
        "build": {
          "ref": "AgentConfig",
          "type": "object",
          "properties": {
            "model": {
              "type": "string"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "prompt": {
              "type": "string"
            },
            "tools": {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "boolean"
              }
            },
            "disable": {
              "type": "boolean"
            },
            "description": {
              "description": "Description of when to use the agent",
              "type": "string"
            },
            "mode": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "subagent"
                },
                {
                  "type": "string",
                  "const": "primary"
                },
                {
                  "type": "string",
                  "const": "all"
                }
              ]
            },
            "permission": {
              "type": "object",
              "properties": {
                "edit": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                },
                "bash": {
                  "anyOf": [
                    {
                      "anyOf": [
                        {
                          "type": "string",
                          "const": "ask"
                        },
                        {
                          "type": "string",
                          "const": "allow"
                        },
                        {
                          "type": "string",
                          "const": "deny"
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string",
                            "const": "ask"
                          },
                          {
                            "type": "string",
                            "const": "allow"
                          },
                          {
                            "type": "string",
                            "const": "deny"
                          }
                        ]
                      }
                    }
                  ]
                },
                "webfetch": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": {}
        },
        "general": {
          "ref": "AgentConfig",
          "type": "object",
          "properties": {
            "model": {
              "type": "string"
            },
            "temperature": {
              "type": "number"
            },
            "top_p": {
              "type": "number"
            },
            "prompt": {
              "type": "string"
            },
            "tools": {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "boolean"
              }
            },
            "disable": {
              "type": "boolean"
            },
            "description": {
              "description": "Description of when to use the agent",
              "type": "string"
            },
            "mode": {
              "anyOf": [
                {
                  "type": "string",
                  "const": "subagent"
                },
                {
                  "type": "string",
                  "const": "primary"
                },
                {
                  "type": "string",
                  "const": "all"
                }
              ]
            },
            "permission": {
              "type": "object",
              "properties": {
                "edit": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                },
                "bash": {
                  "anyOf": [
                    {
                      "anyOf": [
                        {
                          "type": "string",
                          "const": "ask"
                        },
                        {
                          "type": "string",
                          "const": "allow"
                        },
                        {
                          "type": "string",
                          "const": "deny"
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "type": "string",
                            "const": "ask"
                          },
                          {
                            "type": "string",
                            "const": "allow"
                          },
                          {
                            "type": "string",
                            "const": "deny"
                          }
                        ]
                      }
                    }
                  ]
                },
                "webfetch": {
                  "anyOf": [
                    {
                      "type": "string",
                      "const": "ask"
                    },
                    {
                      "type": "string",
                      "const": "allow"
                    },
                    {
                      "type": "string",
                      "const": "deny"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": {}
        }
      },
      "additionalProperties": {
        "ref": "AgentConfig",
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "temperature": {
            "type": "number"
          },
          "top_p": {
            "type": "number"
          },
          "prompt": {
            "type": "string"
          },
          "tools": {
            "type": "object",
            "propertyNames": {
              "type": "string"
            },
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "disable": {
            "type": "boolean"
          },
          "description": {
            "description": "Description of when to use the agent",
            "type": "string"
          },
          "mode": {
            "anyOf": [
              {
                "type": "string",
                "const": "subagent"
              },
              {
                "type": "string",
                "const": "primary"
              },
              {
                "type": "string",
                "const": "all"
              }
            ]
          },
          "permission": {
            "type": "object",
            "properties": {
              "edit": {
                "anyOf": [
                  {
                    "type": "string",
                    "const": "ask"
                  },
                  {
                    "type": "string",
                    "const": "allow"
                  },
                  {
                    "type": "string",
                    "const": "deny"
                  }
                ]
              },
              "bash": {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "type": "string",
                        "const": "ask"
                      },
                      {
                        "type": "string",
                        "const": "allow"
                      },
                      {
                        "type": "string",
                        "const": "deny"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "string",
                          "const": "ask"
                        },
                        {
                          "type": "string",
                          "const": "allow"
                        },
                        {
                          "type": "string",
                          "const": "deny"
                        }
                      ]
                    }
                  }
                ]
              },
              "webfetch": {
                "anyOf": [
                  {
                    "type": "string",
                    "const": "ask"
                  },
                  {
                    "type": "string",
                    "const": "allow"
                  },
                  {
                    "type": "string",
                    "const": "deny"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": {}
      }
    },
    "provider": {
      "description": "Custom provider configurations and model overrides",
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "api": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "env": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "npm": {
            "type": "string"
          },
          "models": {
            "type": "object",
            "propertyNames": {
              "type": "string"
            },
            "additionalProperties": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "release_date": {
                  "type": "string"
                },
                "attachment": {
                  "type": "boolean"
                },
                "reasoning": {
                  "type": "boolean"
                },
                "temperature": {
                  "type": "boolean"
                },
                "tool_call": {
                  "type": "boolean"
                },
                "cost": {
                  "type": "object",
                  "properties": {
                    "input": {
                      "type": "number"
                    },
                    "output": {
                      "type": "number"
                    },
                    "cache_read": {
                      "type": "number"
                    },
                    "cache_write": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "input",
                    "output"
                  ],
                  "additionalProperties": false
                },
                "limit": {
                  "type": "object",
                  "properties": {
                    "context": {
                      "type": "number"
                    },
                    "output": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "context",
                    "output"
                  ],
                  "additionalProperties": false
                },
                "modalities": {
                  "type": "object",
                  "properties": {
                    "input": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "text",
                          "audio",
                          "image",
                          "video",
                          "pdf"
                        ]
                      }
                    },
                    "output": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "text",
                          "audio",
                          "image",
                          "video",
                          "pdf"
                        ]
                      }
                    }
                  },
                  "required": [
                    "input",
                    "output"
                  ],
                  "additionalProperties": false
                },
                "experimental": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "alpha",
                    "beta"
                  ]
                },
                "options": {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {}
                },
                "provider": {
                  "type": "object",
                  "properties": {
                    "npm": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "npm"
                  ],
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              },
              "baseURL": {
                "type": "string"
              },
              "timeout": {
                "description": "Timeout in milliseconds for requests to this provider. Default is 300000 (5 minutes). Set to false to disable timeout.",
                "anyOf": [
                  {
                    "description": "Timeout in milliseconds for requests to this provider. Default is 300000 (5 minutes). Set to false to disable timeout.",
                    "type": "integer",
                    "exclusiveMinimum": 0,
                    "maximum": 9007199254740991
                  },
                  {
                    "description": "Disable timeout for this provider entirely.",
                    "type": "boolean",
                    "const": false
                  }
                ]
              }
            },
            "additionalProperties": {}
          }
        },
        "additionalProperties": false
      }
    },
    "mcp": {
      "description": "MCP (Model Context Protocol) server configurations",
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "anyOf": [
          {
            "ref": "McpLocalConfig",
            "type": "object",
            "properties": {
              "type": {
                "description": "Type of MCP server connection",
                "type": "string",
                "const": "local"
              },
              "command": {
                "description": "Command and arguments to run the MCP server",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "environment": {
                "description": "Environment variables to set when running the MCP server",
                "type": "object",
                "propertyNames": {
                  "type": "string"
                },
                "additionalProperties": {
                  "type": "string"
                }
              },
              "enabled": {
                "description": "Enable or disable the MCP server on startup",
                "type": "boolean"
              }
            },
            "required": [
              "type",
              "command"
            ],
            "additionalProperties": false
          },
          {
            "ref": "McpRemoteConfig",
            "type": "object",
            "properties": {
              "type": {
                "description": "Type of MCP server connection",
                "type": "string",
                "const": "remote"
              },
              "url": {
                "description": "URL of the remote MCP server",
                "type": "string"
              },
              "enabled": {
                "description": "Enable or disable the MCP server on startup",
                "type": "boolean"
              },
              "headers": {
                "description": "Headers to send with the request",
                "type": "object",
                "propertyNames": {
                  "type": "string"
                },
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": [
              "type",
              "url"
            ],
            "additionalProperties": false
          }
        ]
      }
    },
    "formatter": {
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean"
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "environment": {
            "type": "object",
            "propertyNames": {
              "type": "string"
            },
            "additionalProperties": {
              "type": "string"
            }
          },
          "extensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "lsp": {
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "disabled": {
                "type": "boolean",
                "const": true
              }
            },
            "required": [
              "disabled"
            ],
            "additionalProperties": false
          },
          {
            "type": "object",
            "properties": {
              "command": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "extensions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "disabled": {
                "type": "boolean"
              },
              "env": {
                "type": "object",
                "propertyNames": {
                  "type": "string"
                },
                "additionalProperties": {
                  "type": "string"
                }
              },
              "initialization": {
                "type": "object",
                "propertyNames": {
                  "type": "string"
                },
                "additionalProperties": {}
              }
            },
            "required": [
              "command"
            ],
            "additionalProperties": false
          }
        ]
      }
    },
    "instructions": {
      "description": "Additional instruction files or patterns to include",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "layout": {
      "description": "@deprecated Always uses stretch layout.",
      "ref": "LayoutConfig",
      "type": "string",
      "enum": [
        "auto",
        "stretch"
      ]
    },
    "permission": {
      "type": "object",
      "properties": {
        "edit": {
          "anyOf": [
            {
              "type": "string",
              "const": "ask"
            },
            {
              "type": "string",
              "const": "allow"
            },
            {
              "type": "string",
              "const": "deny"
            }
          ]
        },
        "bash": {
          "anyOf": [
            {
              "anyOf": [
                {
                  "type": "string",
                  "const": "ask"
                },
                {
                  "type": "string",
                  "const": "allow"
                },
                {
                  "type": "string",
                  "const": "deny"
                }
              ]
            },
            {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "anyOf": [
                  {
                    "type": "string",
                    "const": "ask"
                  },
                  {
                    "type": "string",
                    "const": "allow"
                  },
                  {
                    "type": "string",
                    "const": "deny"
                  }
                ]
              }
            }
          ]
        },
        "webfetch": {
          "anyOf": [
            {
              "type": "string",
              "const": "ask"
            },
            {
              "type": "string",
              "const": "allow"
            },
            {
              "type": "string",
              "const": "deny"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "tools": {
      "type": "object",
      "propertyNames": {
        "type": "string"
      },
      "additionalProperties": {
        "type": "boolean"
      }
    },
    "experimental": {
      "type": "object",
      "properties": {
        "hook": {
          "type": "object",
          "properties": {
            "file_edited": {
              "type": "object",
              "propertyNames": {
                "type": "string"
              },
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "command": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "environment": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string"
                      },
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "command"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "session_completed": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "environment": {
                    "type": "object",
                    "propertyNames": {
                      "type": "string"
                    },
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "command"
                ],
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "disable_paste_summary": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "allowComments": true,
  "allowTrailingCommas": true
}